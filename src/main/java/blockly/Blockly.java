package blockly;

import dialog.FXMLTextInputDialogController;
import javafx.scene.web.PromptData;
import javafx.scene.web.WebEngine;
import javafx.util.Callback;

import java.io.IOException;
import java.util.ArrayList;

/**
 * Represents Blockly instance.
 * "interface" Blockly (JavaScript) <-> Main app (Java)
 */
public class Blockly {

    private final WebEngine webEngine;
    private String generator = "";

    public Blockly(WebEngine webEngine) throws IllegalArgumentException {
        if (webEngine == null) throw new IllegalArgumentException();
        this.webEngine = webEngine;
        this.webEngine.load(getClass().getResource("/google-blockly/index.html").toString());

        // enable communication JS -> Java
//        webEngine.getLoadWorker().stateProperty().addListener(
//                new ChangeListener() {
//                    @Override
//                    public void changed(ObservableValue observable, Object oldValue, Object newValue) {
//                        if (newValue != Worker.State.SUCCEEDED) return;
//                        JSObject window = (JSObject) webEngine.executeScript("window");
//                        window.setMember("javaCall", new JavaCall());
//                    }
//                });

        webEngine.setPromptHandler(new Callback<>() {
            @Override
            public String call(PromptData prompt) {
                try {
                    return FXMLTextInputDialogController.display(prompt.getMessage(), prompt.getDefaultValue());
                } catch (IOException e) {
                    e.printStackTrace();
                }
                return "";
            }
        });
    }

    // communication JS -> Java, JS can call window.javaCall.{methodOfThisClass()}
//    public class JavaCall {
//        public void workspaceChanged() {
//            System.out.println("Workspace has changed.");
//            //if (generatedCodeTextAreaStringProperty == null) System.err.println("NULL VOLE");
//            //generatedCodeTextAreaStringProperty.clear();
//            generatedCodeTextAreaStringProperty.setText(getCode());
//        }
//    }

    public void setGenerator(String generator) {
        this.generator = generator;
    }

    // returns code generated by blockly
    public String getCode() {
        if (webEngine == null) return "ERROR: No webengine found.";
        return (String) webEngine.executeScript("Blockly." + generator + ".workspaceToCode(workspace)");
    }

    // returns workspace (can be saved and reloaded later)
    public String getWorkspace() throws NullPointerException{
        if (webEngine == null) throw new NullPointerException("No web engine.");
        return (String) webEngine.executeScript(
                "Blockly.Xml.domToText(Blockly.Xml.workspaceToDom(Blockly.mainWorkspace))");
    }

    public void setWorkspace(String workspace) {
        clearWorkspace();
        webEngine.executeScript(
                "Blockly.Xml.domToWorkspace(Blockly.mainWorkspace, Blockly.Xml.textToDom(\"" + workspace + "\"));");
    }

    public void clearWorkspace() {
        if (webEngine == null) throw new NullPointerException("No web engine.");
        webEngine.executeScript("Blockly.mainWorkspace.clear()");
    }

    public void setToolbox(String toolbox) {
        if (webEngine == null) throw new NullPointerException("No web engine.");
        webEngine.executeScript("workspace.updateToolbox(\"" + toolbox + "\")");
    }

    public void showCategories(ArrayList<String> categories) {
        if (webEngine == null) throw new NullPointerException("No web engine.");
        for (String category : categories) {
            webEngine.executeScript("Blockly.mainWorkspace.toolbox_.getToolboxItemById(\""+ category + "\").show()");
        }
    }

    public void hideCategories(ArrayList<String> categories) {
        if (webEngine == null) throw new NullPointerException("Webengine == null");
        for (String category : categories) {
            webEngine.executeScript("Blockly.mainWorkspace.toolbox_.getToolboxItemById(\""+ category + "\").hide()");
        }
    }

    public void center() {
        if (webEngine == null) throw new NullPointerException("Webengine == null");
        webEngine.executeScript("Blockly.mainWorkspace.scrollCenter()");
    }

}
